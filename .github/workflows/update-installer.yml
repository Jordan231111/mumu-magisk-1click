name: Update MuMu Installer

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: '0 0 1 * *' # Runs at 00:00 on the 1st day of every month

permissions:
  contents: write # Needed to commit and push changes

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download latest installer and update README
        id: update_script
        run: |
          DOWNLOAD_URL="https://adl.netease.com/d/g/a11/c/cn_top?dfuid=elk_nUX7eop&nonce=bdc9iC"
          INSTALLER_PATTERN="MuMuInstaller_*.exe"
          README_FILE="README.md"
          TEMP_INSTALLER="temp_installer.exe"
          CHANGES_MADE="false" # Default to no changes

          echo "Looking for existing installer..."
          OLD_INSTALLER=$(ls $INSTALLER_PATTERN 2>/dev/null | head -n 1)

          if [ -z "$OLD_INSTALLER" ]; then
            echo "Error: Could not find existing installer matching pattern '$INSTALLER_PATTERN'. Cannot compare for updates."
            echo "changes_made=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "Found existing installer: $OLD_INSTALLER"

          echo "Attempting to download latest installer to $TEMP_INSTALLER..."
          if curl --fail -s -L "$DOWNLOAD_URL" -o "$TEMP_INSTALLER"; then
            echo "Download successful."

            if [ ! -s "$TEMP_INSTALLER" ]; then
              echo "Error: Downloaded file $TEMP_INSTALLER is empty."
              rm -f "$TEMP_INSTALLER"
              echo "changes_made=false" >> $GITHUB_OUTPUT
              exit 0
            fi

            echo "Calculating checksums..."
            OLD_SUM=$(sha256sum "$OLD_INSTALLER" | awk '{ print $1 }')
            NEW_SUM=$(sha256sum "$TEMP_INSTALLER" | awk '{ print $1 }')

            echo "Old checksum: $OLD_SUM"
            echo "New checksum: $NEW_SUM"

            if [ "$OLD_SUM" != "$NEW_SUM" ]; then
              echo "Installer content HAS CHANGED!"
              # --- PROBLEM --- 
              # We know the content is new, but we don't have the correct new filename
              # from the server. We cannot reliably update the README or commit the file
              # with the correct versioned name.
              # For now, we will report this and exit without making changes.
              # Manual intervention or a different strategy to get the filename is needed.
              echo "Action Required: New installer content detected, but automatic filename update is not possible."
              echo "Please check the download URL and update the installer file and README.md manually."
              CHANGES_MADE="false" # Set to false because we cannot complete the update
              # --- END PROBLEM --- 
            else
              echo "Installer content is the same. No update needed."
              CHANGES_MADE="false"
            fi
            # Clean up the temporary file
            rm -f "$TEMP_INSTALLER"
          else
            echo "Error: Download failed (curl exit code $?)."
            # Clean up potentially partially downloaded file
            rm -f "$TEMP_INSTALLER"
            CHANGES_MADE="false"
          fi

          echo "changes_made=$CHANGES_MADE" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: steps.update_script.outputs.changes_made == 'true'
        run: |
          git push origin HEAD:${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use the default token

      - name: No changes detected
        if: steps.update_script.outputs.changes_made == 'false'
        run: echo "No new installer version detected or update failed." 